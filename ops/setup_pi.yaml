---
# playbook to set up a new RPi
# add the new device to the inventory before running this script
# give the new device an alias in the inventory

# call this script like this: 
# ansible-playbook -i <inventory file path> -i '<temporary IP of pi>,' -e 'target_alias=<alias for new pi in inventory>' setup_pi.yaml


# this play targets only the new hardware, using the temporary IP supplied on the command line
- hosts: ungrouped
  remote_user: pi
  vars:
    # note: this is not a secret - this is the default RPi password
    ansible_password: "raspberry"
  
  tasks:
    - name: change default RPi password
      become: yes
      user:
        name: pi
        password: "{{ hostvars[target_alias]['ansible_password'] | password_hash('sha512') }}"

    - name: create .ssh directory
      file:
        path: /home/pi/.ssh
        state: directory
        mode: 0700
        owner: pi
        group: pi

    - name: generate ssh key pair
      openssh_keypair:
        path: /home/pi/.ssh/id_rsa
        comment: "{{ ansible_facts.date_time.iso8601 }} - {{ target_alias }}"
      register: OPENSSH_KEYPAIR_RETURN

    - name: store openssh public key for transfer to remote access server
      add_host:
        name: "OPENSSH_PUBLIC_KEY_HOLDER"
        public_key: "{{ OPENSSH_KEYPAIR_RETURN.public_key }}"

    # don't use update_cache here since there is no way to use --allow-releaseinfo-change in ansible
    # unless they merge this: https://github.com/ansible/ansible/pull/62824
    - name: install git
      become: yes
      apt:
        name: git
        state: present

    - name: clone BraveButtons git repo
      git:
        repo: https://github.com/bravetechnologycoop/BraveButtons.git
        dest: /home/pi/BraveButtons
        version: production

    - name: copy pi_config.ini
      copy:
        src: "{{ hostvars[target_alias]['inventory_dir'] }}/../{{ hostvars[target_alias]['pi_config_path'] }}"
        dest: /home/pi/BraveButtons/pi/pi_config.ini

    - name: make brave log directory
      become: yes
      file:
        path: /var/log/brave
        state: directory
        owner: pi
        group: pi

    - name: run setup_pi.sh
      become: yes
      shell: ./BraveButtons/pi/setup_pi.sh ./BraveButtons/pi/pi_config.ini >> /var/log/brave/ansible-setup.log 2>&1
      args:
        executable: /bin/bash
        chdir: /home/pi

    # note: we don't run a reboot here, since that would trigger the network hardware reconfiguration and make ansible hang
    # just unplug the RPi once setup is complete

# this play copies the ssh public key generated on the new hardware to the remote access server
- hosts: remote_access
  remote_user: brave
  tasks:
    - name: add ssh key to authorized_hosts for remote access
      authorized_key:
        user: brave
        state: present
        key: "{{ hostvars['OPENSSH_PUBLIC_KEY_HOLDER']['public_key'] }}"
        comment: "{{ ansible_facts.date_time.iso8601 }} - {{ target_alias }}"
